// generated by VivioJS 20.12 10-Jun-2021

"use strict"

function RedBlackTreeTD_(vplayer) {

	// preload fonts
	let font = new FontFace('Open Sans', 'url("../fonts/open-sans-v18-latin-regular.woff")', {weight:400})
	font.load()
	document.fonts.add(font)

	// const imports
	const ABSOLUTE = vplayer.ABSOLUTE
	const ARROW60_END = vplayer.ARROW60_END
	const BLACK = vplayer.BLACK
	const BLUE = vplayer.BLUE
	const CYAN = vplayer.CYAN
	const DOT = vplayer.DOT
	const GRAY128 = vplayer.GRAY128
	const GRAY160 = vplayer.GRAY160
	const GRAY192 = vplayer.GRAY192
	const GRAY224 = vplayer.GRAY224
	const GRAY32 = vplayer.GRAY32
	const GRAY64 = vplayer.GRAY64
	const GRAY96 = vplayer.GRAY96
	const GREEN = vplayer.GREEN
	const HLEFT = vplayer.HLEFT
	const MAGENTA = vplayer.MAGENTA
	const MB_LEFT = vplayer.MB_LEFT
	const PROPAGATE = vplayer.PROPAGATE
	const RED = vplayer.RED
	const ROUND_END = vplayer.ROUND_END
	const VTOP = vplayer.VTOP
	const WHITE = vplayer.WHITE
	const YELLOW = vplayer.YELLOW

	// var imports
	var $addWaitToEventQ = vplayer.$addWaitToEventQ
	var $g = vplayer.$g
	var $terminateThread = vplayer.$terminateThread
	var checkPoint = vplayer.checkPoint
	var debug = vplayer.debug
	var Ellipse = vplayer.Ellipse
	var endInterrupt = vplayer.endInterrupt
	var EXTENDEDGOBJ = vplayer.EXTENDEDGOBJ
	var Font = vplayer.Font
	var getArgAsNum = vplayer.getArgAsNum
	var getTick = vplayer.getTick
	var getTPS = vplayer.getTPS
	var Group = vplayer.Group
	var Layer = vplayer.Layer
	var Line = vplayer.Line
	var Line2 = vplayer.Line2
	var newArray = vplayer.newArray
	var Rectangle = vplayer.Rectangle
	var Rectangle2 = vplayer.Rectangle2
	var reset = vplayer.reset
	var rgba = vplayer.rgba
	var setBgBrush = vplayer.setBgBrush
	var setTPS = vplayer.setTPS
	var setVirtualWindow = vplayer.setVirtualWindow
	var SolidBrush = vplayer.SolidBrush
	var SolidPen = vplayer.SolidPen
	var sprintf = vplayer.sprintf
	var start = vplayer.start
	var startInterrupt = vplayer.startInterrupt
	var Txt = vplayer.Txt
	var VObj = vplayer.VObj

	// const declarations
	const W=1024
	const H=640
	const TITLEH=48
	const SZ=32
	const VSPACE=100
	const BALLSZ=30
	const TICKS=50

	var $thread = 0
	var $pc = 0
	var $fp = -1
	var $sp = -1
	var $acc = 0
	var $obj = 0
	var $stack = 0

	function $call(pc, obj) {
		if (obj === undefined)
			obj = 0
		let l = arguments.length - 1
		for (let i = l; i >= 2; i--)
			$stack[++$sp] = arguments[i]
		$acc = obj
		$stack[++$sp] = $pc + 1
		$pc = pc
		return $acc
	}

	function $enter(n) {	// n = # local variables
		$stack[++$sp] = $obj
		$stack[++$sp] = $fp
		$fp = $sp
		$obj = $acc
		$sp += n
	}

	function $return(n) {	// n = # parameters to pop
		$sp = $fp
		$fp = $stack[$sp--]
		$obj = $stack[$sp--]
		$pc = $stack[$sp--]
		if ($pc == -1) {
			$terminateThread($thread)
			$thread = 0
			return
		}
		$sp -= n
	}

	function $suspendThread() {
		if ($thread == 0)
			return 0;
		$thread.pc = $pc
		$thread.fp = $fp
		$thread.sp = $sp
		$thread.acc = $acc
		$thread.obj = $obj
		return $thread
	}

	function $getCurrentThread() {
		return $thread
	}

	function $resumeThread(toThread) {
		$pc = toThread.pc
		$fp = toThread.fp
		$sp = toThread.sp
		$acc = toThread.acc
		$obj = toThread.obj
		$stack = toThread.stack
		$thread = toThread
	}

	function $switchToThread(toThread) {
		if ($thread == toThread) {
			$acc = toThread.acc
			return
		}
		$suspendThread()
		$resumeThread(toThread)
	}

	function wait(ticks) {
		$suspendThread()
		$addWaitToEventQ(ticks, $thread)	// -ve ticks for a realtime wait
		return 1
	}

	function SimpleButton($grp, x, y, w, h, _b0, _b1, p0, _p1, txtpen, _f1, _f2, txt) {
		Group.call(this, $grp, 0, ((0) | EXTENDEDGOBJ), x, y, 0, 0, w, h)
		this.$b0=_b0
		this.$b1=_b1
		this.$p1=_p1
		this.$f1=_f1
		this.$f2=_f2
		this.$enabled=1
		this.setPen(p0)
		this.setBrush(this.$b0)
		this.setTxtPen(txtpen)
		this.setFont(this.$f1)
		this.setTxt(txt)
		this.setRounded(4, 4)
		this.$buttonFG=new Rectangle2(this, 0, 0, 0, 0, 1, 1, w-2, h-2)
		this.$buttonFG.setRounded(4, 4)
		this.addEventHandler("eventEE", this, this.$eh0)
		this.addEventHandler("eventMB", this, this.$eh1)
	}
	SimpleButton.prototype = Object.create(Group.prototype)

	SimpleButton.prototype.$eh0 = function(enter, $1, $2) {
		this.setBrush(enter ? this.$b1 : this.$b0)
		return PROPAGATE
	}

	SimpleButton.prototype.$eh1 = function(down, $1, $2, $3) {
		if (this.$enabled) {
			this.setFont(down ? this.$f2 : this.$f1)
			this.$buttonFG.setPen(down ? this.$p1 : 0)
		}
		return PROPAGATE
	}

	function RBTree() {
		VObj.call(this)
		this.$head=new this.$Node(this, $g[0], 0)
		this.$root=0
		this.$nlevel
		this.$level=newArray()
		this.$lock=0
	}
	RBTree.prototype = Object.create(VObj.prototype)

	RBTree.prototype.$Node = function($parent, $grp, _key) {
		this.parent = $parent
		Group.call(this, $grp, 0, ((0) | EXTENDEDGOBJ), W/2, VSPACE, -SZ/2, -SZ/2, SZ, SZ)
		this.$key=_key
		this.$link=newArray(2)
		this.$link[0]=this.$link[1]=0
		this.$red=1
		this.$parent=0
		this.$x=0
		this.$level=0
		this.$next
		this.$brush=new SolidBrush(BLACK)
		this.$arrow=new Line(this, 0, 0, $g[1], 0, 0, 0, 0, 0, 0)
		this.$arrow.setOpacity(0)
		this.$body=new Ellipse(this, $g[31], 0, $g[1], this.$brush, 0, 0, -SZ/2, -SZ/2, SZ, SZ, $g[2], $g[41], "%d", this.$key)
		this.$body.setOpacity(0)
		this.$border=new Rectangle(this, 0, 0, $g[36], 0, 0, 0, -2*SZ-2, -SZ/2-2, 4*SZ+4, SZ+4)
		this.$border.setOpacity(0)
		this.addEventHandler("eventUPDATED", this, this.$eh2)
		this.$body.addEventHandler("eventMB", this, this.$eh3)
	}
	RBTree.prototype.$Node.prototype = Object.create(Group.prototype)

	RBTree.prototype.$Node.prototype.$hideRemovedNode = function() {
		this.setOpacity(0, TICKS, 0)
		this.$arrow.setOpacity(0)
	}

	RBTree.prototype.$Node.prototype.$eh2 = function() {
		if (this.$parent!=0&&this!=0) {
			if ($g[45]==1&&this.$red) {
				this.$arrow.setPt(0, this.$parent.getPosX(1)-this.getPosX(1), this.$parent.getPosY(1)-this.getPosY(1))
			} else {
				this.$arrow.setPt(0, this.$parent.getPosX(1)-this.getPosX(1), this.$parent.getPosY(1)-this.getPosY(1))
			}
		}
	}

	RBTree.prototype.$Node.prototype.$eh3 = function(down, flags, $2, $3) {
		if (down&&(flags&MB_LEFT)) {
			$g[62]=this.$key
			$g[63].setTxt("%d", $g[62])
		}
	}

	RBTree.prototype.$isRed = function(n) {
		return n&&n.$red
	}

	RBTree.prototype.$getUncle = function(g, key) {
		return g ? g.$link[key<g.$key ? 1 : 0] : 0
	}

	RBTree.prototype.$rot = function(n, dir) {
		let save=n.$link[((!dir)|0)]
		n.$link[((!dir)|0)]=save.$link[dir]
		save.$link[dir]=n
		n.$red=1
		save.$red=0
		$g[69]++
		return save
	}

	RBTree.prototype.$setParentLevel = function(n, parent, level) {
		if (n==0) {
			this.$nlevel=(level>this.$nlevel) ? level : this.$nlevel
			return
		}
		n.$parent=parent
		n.$level=($g[45]==1&&this.$isRed(n)) ? level-1 : level
		this.$setParentLevel(n.$link[0], n, ($g[45]==1&&n.$red) ? level : level+1)
		this.$setParentLevel(n.$link[1], n, ($g[45]==1&&n.$red) ? level : level+1)
	}

	RBTree.prototype.$setNext = function(n) {
		if (n==0)
		return
		this.$setNext(n.$link[1])
		n.$next=this.$level[n.$level]
		this.$level[n.$level]=n
		this.$setNext(n.$link[0])
	}

	RBTree.prototype.$setx = function() {
		let i, j, dx
		let n
		for (i=0; i<this.$nlevel; i++) {
			if ($g[45]==0) {
				dx=W/2
				for (j=1; j<=i; j++)
				dx/=2
				for (n=this.$level[i]; n; n=n.$next) {
					n.$x=(n.$parent ? n.$parent.$x : 0)+(n.$parent.$key>n.$key ? -dx : dx)
				}
			} else {
				let nb=0
				for (n=this.$level[i]; n; n=n.$next)
				nb+=(n.$red==0) ? 1 : 0
				dx=W/nb
				dx=(dx<4*SZ+6) ? 4*SZ+6 : dx
				let x=(W-(nb-1)*dx)/2
				for (n=this.$level[i]; n; n=n.$next) {
					if (n.$red==0) {
						n.$x=x
						x+=dx
						if (n.$link[0].$level==n.$level)
						n.$link[0].$x=n.$x-3*SZ/2
						if (n.$link[1].$level==n.$level)
						n.$link[1].$x=n.$x+3*SZ/2
					}
				}
			}
		}
	}

	RBTree.prototype.$dump = function() {
		for (let i=0; i<this.$nlevel; i++) {
			for (let n=this.$level[i]; n; n=n.$next) {
				debug("Node %s level=%d x=%d parent=%d left=%d right=%d", n.$key, n.$level, n.$x, n.$parent.$key, n.$link[0].$key, n.$link[1].$key)
			}
		}
	}

	RBTree.prototype.$set = function(n, imm) {
		if (n==0)
		return
		n.$brush.setRGBA(n.$red==0 ? BLACK : RED, imm ? 0 : TICKS, 0)
		n.$body.setOpacity(1, TICKS, 0)
		n.$border.setOpacity(($g[45]==1&&n.$red==0) ? 1 : 0, TICKS, 0)
		n.$arrow.setOpacity(n.$parent==0 ? 0 : 1)
		n.$arrow.setPen(n.$red ? $g[34] : $g[33])
		if ($g[45]==0) {
			n.$arrow.setPt(1, 0, -SZ/2)
		} else {
			n.$arrow.setPt(1, n.$red ? (n.$key<n.$parent.$key ? SZ/2 : -SZ/2) : 0, n.$red ? 0 : -SZ/2)
		}
		if (imm) {
			n.setPos(n.$x, VSPACE+n.$level*VSPACE)
		} else {
			n.setPos(n.$x, VSPACE+n.$level*VSPACE, TICKS, 0)
		}
		this.$set(n.$link[0], imm)
		this.$set(n.$link[1], imm)
	}

	RBTree.prototype.$checkHelper = function(n) {
		if (n==0)
		return 1
		let ln=n.$link[0]
		let rn=n.$link[1]
		if (this.$isRed(n)) {
			if (this.$isRed(ln)||this.$isRed(rn))
			return 0
		}
		if ((ln&&ln.$key>n.$key)||(rn&&rn.$key<n.$key))
		return 0
		let lh=this.$checkHelper(ln)
		let rh=this.$checkHelper(rn)
		if (lh&&rh&&lh!=rh)
		return 0
		if (lh&&rh) {
			return this.$isRed(n) ? lh : lh+1
		} else {
			return 0
		}
	}

	RBTree.prototype.$check = function() {
		if (this.$checkHelper(this.$root)==0) {
			$g[71]++
			debug("CHECK ERROR errors=%d", $g[71])
		}
	}

	function $execute(thread) {

		$switchToThread(thread);

		while (1) {
			switch ($pc) {
			case -1:
				return;		// catch thread termination
			case 0:
				$enter(0)	// start with a function call
				$g[1]=new SolidPen(0, 0, BLACK)
				$g[2]=new SolidPen(0, 0, WHITE)
				$g[3]=new SolidPen(0, 0, RED)
				$g[4]=new SolidPen(0, 0, GREEN)
				$g[5]=new SolidPen(0, 0, BLUE)
				$g[6]=new SolidPen(0, 0, YELLOW)
				$g[7]=new SolidPen(0, 0, MAGENTA)
				$g[8]=new SolidPen(0, 0, CYAN)
				$g[9]=new SolidPen(0, 0, GRAY32)
				$g[10]=new SolidPen(0, 0, GRAY64)
				$g[11]=new SolidPen(0, 0, GRAY96)
				$g[12]=new SolidPen(0, 0, GRAY128)
				$g[13]=new SolidPen(0, 0, GRAY160)
				$g[14]=new SolidPen(0, 0, GRAY192)
				$g[15]=new SolidPen(0, 0, GRAY224)
				$g[16]=new SolidBrush(BLACK)
				$g[17]=new SolidBrush(WHITE)
				$g[18]=new SolidBrush(RED)
				$g[19]=new SolidBrush(GREEN)
				$g[20]=new SolidBrush(BLUE)
				$g[21]=new SolidBrush(YELLOW)
				$g[22]=new SolidBrush(MAGENTA)
				$g[23]=new SolidBrush(CYAN)
				$g[24]=new SolidBrush(GRAY32)
				$g[25]=new SolidBrush(GRAY64)
				$g[26]=new SolidBrush(GRAY96)
				$g[27]=new SolidBrush(GRAY128)
				$g[28]=new SolidBrush(GRAY160)
				$g[29]=new SolidBrush(GRAY192)
				$g[30]=new SolidBrush(GRAY224)
				setVirtualWindow(0, 0, W, H, 1)
				$g[31]=new Layer(1)
				$g[32]=new Layer(2)
				setBgBrush($g[30])
				$g[33]=new SolidPen(0, 1, BLACK, ARROW60_END, 8, 8)
				$g[34]=new SolidPen(0, 1, RED, ARROW60_END, 8, 8)
				$g[35]=new SolidPen(0, 2, GRAY64, ROUND_END)
				$g[36]=new SolidPen(DOT, 0, BLACK)
				$g[37]=new SolidBrush(rgba(0, 0.5, 0))
				$g[38]=new SolidBrush(rgba(0, 0.56000000000000005, 0.16))
				$g[39]=new Font("Open Sans", 14, 0)
				$g[40]=new Font("Open Sans", 12, 0)
				$g[41]=new Font("Open Sans", 16, 0)
				$g[42]=new Font("Open Sans", 14, 0)
				$g[43]=new Font("Open Sans", 24, 0)
				$g[44]=new Font("Open Sans", 32, 0)
				$g[45]=0
				$g[46]=new Ellipse($g[0], $g[32], 0, $g[1], $g[18], 0, 0, -BALLSZ/2, -BALLSZ/2, BALLSZ, BALLSZ, $g[1], $g[41])
				$g[46].setOpacity(0)
				$g[47]=new Ellipse($g[0], $g[32], 0, 0, $g[16], 0, 0, -BALLSZ/4, -BALLSZ/4, BALLSZ/2, BALLSZ/2)
				$g[47].setOpacity(0)
				$g[48]=new Ellipse($g[0], $g[32], 0, $g[1], $g[18], 0, 0, -SZ/2, -SZ/2, SZ, SZ, $g[1], $g[41])
				$g[48].setOpacity(0)
				$g[49]=new Rectangle2($g[0], 0, 0, 0, $g[38], 5, 5, 13*W/32, 44, $g[2], $g[44], "Red-Black Tree (Top Down)")
				$g[49].setRounded(5, 5)
				$g[49].setTxtOff(0, 2)
				$g[49].setPt(1, $g[49].getTxtW()+16, TITLEH)
				$g[50]=new Line2($g[0], 0, ABSOLUTE, $g[1], W/2-4, 20, W/2+4, 20)
				$g[51]=new Line2($g[0], 0, ABSOLUTE, $g[33], W/2, 20, W/2, VSPACE-SZ/2)
				$g[52]=new Txt($g[0], 0, HLEFT|VTOP, 5, H-100, $g[1], $g[43])
				$g[53]=new Txt($g[0], 0, HLEFT|VTOP, 5, H-70, $g[1], $g[43])
				$g[54]=new Txt($g[0], 0, HLEFT|VTOP, 5, H-40, $g[1], $g[43])
				$g[55]=new SimpleButton($g[0], 760, 10, 90, 25, $g[17], $g[30], $g[35], $g[12], $g[1], $g[39], $g[40], "sequence 1")
				$g[56]=new SimpleButton($g[0], 760, 40, 90, 25, $g[17], $g[30], $g[35], $g[12], $g[1], $g[39], $g[40], "sequence 2")
				$g[57]=new SimpleButton($g[0], 760, 70, 90, 25, $g[17], $g[30], $g[35], $g[12], $g[1], $g[39], $g[40], "reset")
				$g[58]=new SimpleButton($g[0], 860, 10, 90, 25, $g[17], $g[30], $g[35], $g[12], $g[1], $g[39], $g[40], "find")
				$g[59]=new SimpleButton($g[0], 860, 40, 90, 25, $g[17], $g[30], $g[35], $g[12], $g[1], $g[39], $g[40], "add")
				$g[60]=new SimpleButton($g[0], 860, 70, 90, 25, $g[17], $g[30], $g[35], $g[12], $g[1], $g[39], $g[40], "remove")
				$g[61]=new SimpleButton($g[0], 760, 100, 90, 25, $g[17], $g[30], $g[35], $g[12], $g[1], $g[39], $g[40], sprintf("mode %d", $g[45]))
				$g[62]=50
				$g[63]=new Rectangle2($g[0], 0, 0, $g[1], $g[18], W-10-45, 5+(95-45)/2, 45, 45, $g[1], $g[41], "%d", $g[62])
				$g[63].setRounded(5, 5)
				$g[64]="Press sequence 1 or 2 to run a preset sequence of add and remove operations.\n\n"
				$g[64]+="You can also update the binary tree by pressing the add or remove buttons\n"
				$g[64]+="AFTER selecting an existing node or entering a value [0..999] in the red box."
				new Txt($g[0], 0, HLEFT|VTOP, W/2, H-80, $g[1], $g[42], $g[64])
				$g[65]=0
				$g[66]=0
				$g[67]=0
				$g[68]=0
				$g[69]=0
				$g[70]=0
				$g[71]=0
				setTPS(TICKS)
				$g[0].addEventHandler("eventKEY", 0, 93)
				$g[58].addEventHandler("eventMB", $obj, 104)
				$g[59].addEventHandler("eventMB", $obj, 107)
				$g[60].addEventHandler("eventMB", $obj, 110)
				$g[55].addEventHandler("eventMB", $obj, 149)
				$g[56].addEventHandler("eventMB", $obj, 152)
				$g[57].addEventHandler("eventMB", $obj, 163)
				$g[61].addEventHandler("eventMB", $obj, 165)
				$g[72]=new RBTree()
				if (!(getArgAsNum("selfTest", 0))) {
					$pc = 2
					continue
				}
				$call(113, $obj)
				continue
			case 1:
				debug("FINISHED tick=%d errors=%d", getTick(), $g[71])
				$pc = 2
			case 2:
				$return(0)
				continue
			case 3:
				$enter(0);	// getLock
				$pc = 4
			case 4:
				if (!($obj.$lock)) {
					$pc = 6
					continue
				}
				$pc = 5
				if (wait(1)) {
					return
				}
			case 5:
				$pc = 4
				continue
			case 6:
				$obj.$lock=1
				$return(0)
				continue
			case 7:
				$enter(0);	// releaseLock
				$obj.$lock=0
				$pc = 8
				if (wait(1)) {
					return
				}
			case 8:
				$return(0)
				continue
			case 9:
				$enter(0);	// drot
				$g[70]+=2
				$g[69]-=2
				$stack[$fp-3].$link[((!$stack[$fp-4])|0)]=$obj.$rot($stack[$fp-3].$link[((!$stack[$fp-4])|0)], ((!$stack[$fp-4])|0))
				$call(11, $obj, 0, 1)
				continue
			case 10:
				$acc = $obj.$rot($stack[$fp-3], $stack[$fp-4])
				$return(2)
				continue
			case 11:
				$enter(1);	// redraw
				$call(3, $obj)
				continue
			case 12:
				$obj.$nlevel=0
				$obj.$setParentLevel($obj.$root, 0, 0)
				$stack[$fp+1]=0
				$pc = 13
			case 13:
				if (!($stack[$fp+1]<$obj.$nlevel)) {
					$pc = 15
					continue
				}
				$obj.$level[$stack[$fp+1]]=0
				$pc = 14
			case 14:
				$stack[$fp+1]++
				$pc = 13
				continue
			case 15:
				$obj.$setNext($obj.$root)
				$obj.$setx()
				$obj.$set($obj.$root, $stack[$fp-3])
				if (!($stack[$fp-4])) {
					$pc = 17
					continue
				}
				$pc = 16
				if (wait(TICKS)) {
					return
				}
			case 16:
				$pc = 17
			case 17:
				$call(7, $obj)
				continue
			case 18:
				$g[54].setTxt("add=%d rem=%d nflip=%d nrot=%d ndrot=%d", $g[66], $g[67], $g[68], $g[69], $g[70])
				$return(2)
				continue
			case 19:
				$enter(0);	// trackBallStart
				$g[46].setBrush($stack[$fp-4]==0 ? $g[37] : $stack[$fp-4]==1 ? $g[18] : $g[16])
				$g[46].setTxtPen($stack[$fp-4]==0 ? $g[2] : $stack[$fp-4]==1 ? $g[1] : $g[2])
				$g[46].setTxt("%d", $stack[$fp-3])
				$g[46].setPos(W/2, 20)
				$g[46].setOpacity(1)
				$pc = 20
				if ($g[46].setPos(W/2, VSPACE-BALLSZ, TICKS, 1)) {
					return
				}
			case 20:
				$return(2)
				continue
			case 21:
				$enter(2);	// trackBall
				if (!($stack[$fp-4]==0||$stack[$fp-5]==0)) {
					$pc = 22
					continue
				}
				$return(4)
				continue
			case 22:
				$stack[$fp-3].setOpacity(1)
				$stack[$fp-3].setPos($stack[$fp-4].$x, VSPACE+$stack[$fp-4].$level*VSPACE)
				$stack[$fp+1]=$stack[$fp-5].$x
				$stack[$fp+2]=VSPACE+$stack[$fp-5].$level*VSPACE-SZ/2
				if (!($g[45]==1&&$stack[$fp-5].$red)) {
					$pc = 23
					continue
				}
				$stack[$fp+1]+=$stack[$fp-5].$key<$stack[$fp-4].$key ? SZ/2 : -SZ/2
				$stack[$fp+2]+=SZ/2
				$pc = 23
			case 23:
				$pc = 24
				if ($stack[$fp-3].setPos($stack[$fp+1], $stack[$fp+2], TICKS, $stack[$fp-6])) {
					return
				}
			case 24:
				$return(4)
				continue
			case 25:
				$enter(2);	// find1
				$stack[$fp+1]=0, $stack[$fp+2]=$obj.$root
				$pc = 26
			case 26:
				if (!($stack[$fp+2]!=0)) {
					$pc = 33
					continue
				}
				$pc = 27
				if ($stack[$fp+2].$body.toggleBrushAndPens($g[17], $g[1], $g[1], 4, getTPS()/4, 1)) {
					return
				}
			case 27:
				$stack[$fp+1]=$stack[$fp+2]
				if (!($stack[$fp-3]<$stack[$fp+2].$key)) {
					$pc = 28
					continue
				}
				$stack[$fp+2]=$stack[$fp+2].$link[0]
				$pc = 31
				continue
			case 28:
				if (!($stack[$fp-3]>$stack[$fp+2].$key)) {
					$pc = 29
					continue
				}
				$stack[$fp+2]=$stack[$fp+2].$link[1]
				$pc = 30
				continue
			case 29:
				$pc = 33
				continue
			case 30:
				$pc = 31
			case 31:
				$call(21, $obj, $g[46], $stack[$fp+1], $stack[$fp+2], 1)
				continue
			case 32:
				$pc = 26
				continue
			case 33:
				$g[53].setTxt(($stack[$fp+2]==0) ? "NOT found" : "FOUND")
				$pc = 34
				if ($g[46].setOpacity(0, TICKS, 1)) {
					return
				}
			case 34:
				$return(1)
				continue
			case 35:
				$enter(0);	// find
				$g[52].setTxt("find(%d)", $stack[$fp-3])
				$g[53].setTxt("")
				$call(19, $obj, $stack[$fp-3], 0)
				continue
			case 36:
				$call(25, $obj, $stack[$fp-3])
				continue
			case 37:
				$pc = 38
				if ($g[46].setOpacity(0, TICKS, 1)) {
					return
				}
			case 38:
				$pc = 39
				if (wait(1)) {
					return
				}
			case 39:
				checkPoint()
				$obj.$check()
				$return(1)
				continue
			case 40:
				$enter(7);	// addHelper
				if (!($obj.$root==0)) {
					$pc = 43
					continue
				}
				$obj.$root=new $obj.$Node($obj, $g[0], $stack[$fp-3])
				$call(11, $obj, 1, 1)
				continue
			case 41:
				if (!($obj.$root==0)) {
					$pc = 42
					continue
				}
				$acc = 0
				$return(1)
				continue
			case 42:
				$pc = 61
				continue
			case 43:
				$stack[$fp+1]=0
				$stack[$fp+3]=$obj.$head
				$stack[$fp+4]=0, $stack[$fp+5]=0
				$stack[$fp+6]=$stack[$fp+3].$link[1]=$obj.$root
				$pc = 44
			case 44:
				if (!(1)) {
					$pc = 60
					continue
				}
				if (!($stack[$fp+6]==0)) {
					$pc = 48
					continue
				}
				$stack[$fp+5].$link[$stack[$fp+1]]=$stack[$fp+6]=new $obj.$Node($obj, $g[0], $stack[$fp-3])
				$call(11, $obj, 1, 0)
				continue
			case 45:
				$call(21, $obj, $g[46], $stack[$fp+5], $stack[$fp+5].$link[$stack[$fp+1]], 1)
				continue
			case 46:
				if (!($stack[$fp+6]==0)) {
					$pc = 47
					continue
				}
				$acc = 0
				$return(1)
				continue
			case 47:
				$pc = 51
				continue
			case 48:
				$pc = 49
				if ($stack[$fp+6].$body.toggleBrushAndPens($g[17], $g[1], $g[1], 4, getTPS()/4, 1)) {
					return
				}
			case 49:
				if (!($obj.$isRed($stack[$fp+6].$link[0])&&$obj.$isRed($stack[$fp+6].$link[1]))) {
					$pc = 50
					continue
				}
				$stack[$fp+6].$red=1
				$stack[$fp+6].$link[0].$red=$stack[$fp+6].$link[1].$red=0
				$pc = 50
			case 50:
				$pc = 51
			case 51:
				if (!($obj.$isRed($stack[$fp+6])&&$obj.$isRed($stack[$fp+5]))) {
					$pc = 56
					continue
				}
				$stack[$fp+7]=(($stack[$fp+3].$link[1]==$stack[$fp+4])|0)
				if (!($stack[$fp+6]==$stack[$fp+5].$link[$stack[$fp+2]])) {
					$pc = 52
					continue
				}
				$stack[$fp+3].$link[$stack[$fp+7]]=$obj.$rot($stack[$fp+4], ((!$stack[$fp+2])|0))
				$pc = 54
				continue
			case 52:
				$stack[$fp+3].$link[$stack[$fp+7]]=$call(9, $obj, $stack[$fp+4], ((!$stack[$fp+2])|0))
				continue
			case 53:
				$pc = 54
			case 54:
				$call(11, $obj, 0, 1)
				continue
			case 55:
				$pc = 56
			case 56:
				if (!($stack[$fp+6].$key==$stack[$fp-3])) {
					$pc = 57
					continue
				}
				$pc = 60
				continue
			case 57:
				$stack[$fp+2]=$stack[$fp+1]
				$stack[$fp+1]=(($stack[$fp-3]>$stack[$fp+6].$key)|0)
				if (!($stack[$fp+4])) {
					$pc = 58
					continue
				}
				$stack[$fp+3]=$stack[$fp+4]
				$pc = 58
			case 58:
				$stack[$fp+4]=$stack[$fp+5], $stack[$fp+5]=$stack[$fp+6]
				$call(21, $obj, $g[46], $stack[$fp+6], $stack[$fp+6].$link[$stack[$fp+1]], 1)
				continue
			case 59:
				$stack[$fp+6]=$stack[$fp+6].$link[$stack[$fp+1]]
				$pc = 44
				continue
			case 60:
				$obj.$root=$obj.$head.$link[1]
				$pc = 61
			case 61:
				$obj.$root.$red=0
				$return(1)
				continue
			case 62:
				$enter(0);	// add
				$g[52].setTxt("add(%d)", $stack[$fp-3])
				$g[53].setTxt("")
				$g[66]++
				$call(19, $obj, $stack[$fp-3], 1)
				continue
			case 63:
				$call(40, $obj, $stack[$fp-3])
				continue
			case 64:
				$pc = 65
				if ($g[46].setOpacity(0, TICKS, 1)) {
					return
				}
			case 65:
				$obj.$check()
				$call(11, $obj, 1, 0)
				continue
			case 66:
				$pc = 67
				if (wait(1)) {
					return
				}
			case 67:
				checkPoint()
				$return(1)
				continue
			case 68:
				$enter(8);	// removeHelper
				if (!($obj.$root)) {
					$pc = 87
					continue
				}
				$stack[$fp+1]=$obj.$head
				$stack[$fp+2]=0, $stack[$fp+3]=0
				$stack[$fp+4]=0
				$stack[$fp+5]=1
				$stack[$fp+1].$link[1]=$obj.$root
				$pc = 69
			case 69:
				if (!($stack[$fp+1].$link[$stack[$fp+5]])) {
					$pc = 84
					continue
				}
				$stack[$fp+6]=$stack[$fp+5]
				$stack[$fp+2]=$stack[$fp+3], $stack[$fp+3]=$stack[$fp+1]
				$stack[$fp+1]=$stack[$fp+1].$link[$stack[$fp+5]]
				$stack[$fp+5]=(($stack[$fp-3]>$stack[$fp+1].$key)|0)
				if (!($stack[$fp-3]==$stack[$fp+1].$key)) {
					$pc = 70
					continue
				}
				$stack[$fp+4]=$stack[$fp+1]
				$pc = 70
			case 70:
				if (!(((!$obj.$isRed($stack[$fp+1]))|0)&&((!$obj.$isRed($stack[$fp+1].$link[$stack[$fp+5]]))|0))) {
					$pc = 83
					continue
				}
				if (!($obj.$isRed($stack[$fp+1].$link[((!$stack[$fp+5])|0)]))) {
					$pc = 72
					continue
				}
				$stack[$fp+3]=$stack[$fp+3].$link[$stack[$fp+6]]=$obj.$rot($stack[$fp+1], $stack[$fp+5])
				$call(11, $obj, 0, 1)
				continue
			case 71:
				$pc = 82
				continue
			case 72:
				if (!(((!$obj.$isRed($stack[$fp+1].$link[((!$stack[$fp+5])|0)]))|0))) {
					$pc = 81
					continue
				}
				$stack[$fp+7]=$stack[$fp+3].$link[((!$stack[$fp+6])|0)]
				if (!($stack[$fp+7])) {
					$pc = 80
					continue
				}
				if (!(((!$obj.$isRed($stack[$fp+7].$link[((!$stack[$fp+6])|0)]))|0)&&((!$obj.$isRed($stack[$fp+7].$link[$stack[$fp+6]]))|0))) {
					$pc = 73
					continue
				}
				$stack[$fp+3].$red=0
				$stack[$fp+7].$red=$stack[$fp+1].$red=1
				$pc = 79
				continue
			case 73:
				$stack[$fp+8]=(($stack[$fp+2].$link[1]==$stack[$fp+3])|0)
				if (!($obj.$isRed($stack[$fp+7].$link[$stack[$fp+6]]))) {
					$pc = 75
					continue
				}
				$stack[$fp+2].$link[$stack[$fp+8]]=$call(9, $obj, $stack[$fp+3], $stack[$fp+6])
				continue
			case 74:
				$pc = 77
				continue
			case 75:
				if (!($obj.$isRed($stack[$fp+7].$link[((!$stack[$fp+6])|0)]))) {
					$pc = 76
					continue
				}
				$stack[$fp+2].$link[$stack[$fp+8]]=$obj.$rot($stack[$fp+3], $stack[$fp+6])
				$pc = 76
			case 76:
				$pc = 77
			case 77:
				$call(11, $obj, 0, 1)
				continue
			case 78:
				$stack[$fp+1].$red=$stack[$fp+2].$link[$stack[$fp+8]].$red=1
				$stack[$fp+2].$link[$stack[$fp+8]].$link[0].$red=0
				$stack[$fp+2].$link[$stack[$fp+8]].$link[1].$red=0
				$pc = 79
			case 79:
				$pc = 80
			case 80:
				$pc = 81
			case 81:
				$pc = 82
			case 82:
				$pc = 83
			case 83:
				$pc = 69
				continue
			case 84:
				if (!($stack[$fp+4])) {
					$pc = 85
					continue
				}
				$stack[$fp+4].$key=$stack[$fp+1].$key
				$stack[$fp+4].$body.setTxt("%d", $stack[$fp+4].$key)
				$stack[$fp+3].$link[$stack[$fp+3].$link[1]==$stack[$fp+1] ? 1 : 0]=$stack[$fp+1].$link[$stack[$fp+1].$link[0] ? 0 : 1]
				$stack[$fp+1].$hideRemovedNode()
				$pc = 85
			case 85:
				$obj.$root=$obj.$head.$link[1]
				if (!($obj.$root)) {
					$pc = 86
					continue
				}
				$obj.$root.$red=0
				$pc = 86
			case 86:
				$pc = 87
			case 87:
				$acc = 1
				$return(1)
				continue
			case 88:
				$enter(1);	// remove
				$g[52].setTxt("remove(%d)", $stack[$fp-3])
				$g[53].setTxt("")
				$call(19, $obj, $stack[$fp-3], 2)
				continue
			case 89:
				$stack[$fp+1]=0
				$g[67]++
				$call(68, $obj, $stack[$fp-3])
				continue
			case 90:
				$call(11, $obj, 0, 0)
				continue
			case 91:
				$obj.$check()
				$pc = 92
				if (wait(1)) {
					return
				}
			case 92:
				checkPoint()
				$acc = 1
				$return(1)
				continue
			case 93:
				$enter(0);	// $eh4
				if (!($stack[$fp-4]==0)) {
					$pc = 103
					continue
				}
				if (!($stack[$fp-3]==8)) {
					$pc = 94
					continue
				}
				$g[62]=$g[62]/10|0
				$g[63].setTxt("%d", $g[62])
				$pc = 102
				continue
			case 94:
				if (!(($stack[$fp-3]>=48)&&($stack[$fp-3]<=57))) {
					$pc = 95
					continue
				}
				$g[62]=($g[62]*10+$stack[$fp-3]-48)%1000
				$g[63].setTxt("%d", $g[62])
				$pc = 101
				continue
			case 95:
				if (!(($stack[$fp-3]==13)&&($g[65]==0))) {
					$pc = 97
					continue
				}
				$g[65]=1
				start()
				$call(62, $g[72], $g[62])
				continue
			case 96:
				$g[65]=0
				$pc = 100
				continue
			case 97:
				if (!(($stack[$fp-3]==127)&&($g[65]==0))) {
					$pc = 99
					continue
				}
				$g[65]=1
				start()
				$call(88, $g[72], $g[62])
				continue
			case 98:
				$g[65]=0
				$pc = 99
			case 99:
				$pc = 100
			case 100:
				$pc = 101
			case 101:
				$pc = 102
			case 102:
				$pc = 103
			case 103:
				$return(4)
				continue
			case 104:
				$enter(0);	// $eh5
				if (!($stack[$fp-3]&&($stack[$fp-4]&MB_LEFT)&&($g[65]==0))) {
					$pc = 106
					continue
				}
				$g[65]=1
				start()
				$call(35, $g[72], $g[62])
				continue
			case 105:
				$g[65]=0
				$pc = 106
			case 106:
				$return(4)
				continue
			case 107:
				$enter(0);	// $eh6
				if (!($stack[$fp-3]&&($stack[$fp-4]&MB_LEFT)&&($g[65]==0))) {
					$pc = 109
					continue
				}
				$g[65]=1
				start()
				$call(62, $g[72], $g[62])
				continue
			case 108:
				$g[65]=0
				$pc = 109
			case 109:
				$return(4)
				continue
			case 110:
				$enter(0);	// $eh7
				if (!($stack[$fp-3]&&($stack[$fp-4]&MB_LEFT)&&($g[65]==0))) {
					$pc = 112
					continue
				}
				$g[65]=1
				start()
				$call(88, $g[72], $g[62])
				continue
			case 111:
				$g[65]=0
				$pc = 112
			case 112:
				$return(4)
				continue
			case 113:
				$enter(0);	// seq1
				$g[65]=1
				start()
				$call(62, $g[72], 13)
				continue
			case 114:
				$call(62, $g[72], 8)
				continue
			case 115:
				$call(62, $g[72], 17)
				continue
			case 116:
				$call(62, $g[72], 1)
				continue
			case 117:
				$call(62, $g[72], 11)
				continue
			case 118:
				$call(62, $g[72], 6)
				continue
			case 119:
				$call(62, $g[72], 15)
				continue
			case 120:
				$call(62, $g[72], 25)
				continue
			case 121:
				$call(62, $g[72], 22)
				continue
			case 122:
				$call(62, $g[72], 20)
				continue
			case 123:
				$call(62, $g[72], 30)
				continue
			case 124:
				$call(62, $g[72], 35)
				continue
			case 125:
				$call(62, $g[72], 40)
				continue
			case 126:
				$call(62, $g[72], 45)
				continue
			case 127:
				$call(62, $g[72], 50)
				continue
			case 128:
				$call(62, $g[72], 55)
				continue
			case 129:
				$call(62, $g[72], 60)
				continue
			case 130:
				$call(62, $g[72], 65)
				continue
			case 131:
				$call(62, $g[72], 75)
				continue
			case 132:
				$call(88, $g[72], 75)
				continue
			case 133:
				$call(88, $g[72], 22)
				continue
			case 134:
				$call(88, $g[72], 55)
				continue
			case 135:
				$call(88, $g[72], 65)
				continue
			case 136:
				$call(88, $g[72], 45)
				continue
			case 137:
				$call(88, $g[72], 50)
				continue
			case 138:
				$call(88, $g[72], 30)
				continue
			case 139:
				$call(62, $g[72], 15)
				continue
			case 140:
				$call(88, $g[72], 50)
				continue
			case 141:
				$call(62, $g[72], 12)
				continue
			case 142:
				$call(62, $g[72], 11)
				continue
			case 143:
				$call(62, $g[72], 14)
				continue
			case 144:
				$call(88, $g[72], 20)
				continue
			case 145:
				$call(88, $g[72], 10)
				continue
			case 146:
				$call(88, $g[72], 60)
				continue
			case 147:
				$call(88, $g[72], 0)
				continue
			case 148:
				$g[65]=0
				$return(0)
				continue
			case 149:
				$enter(0);	// $eh8
				if (!($stack[$fp-3]&&($stack[$fp-4]&MB_LEFT)&&($g[65]==0))) {
					$pc = 151
					continue
				}
				$call(113, $obj)
				continue
			case 150:
				$pc = 151
			case 151:
				$return(4)
				continue
			case 152:
				$enter(0);	// $eh9
				if (!($stack[$fp-3]&&($stack[$fp-4]&MB_LEFT)&&($g[65]==0))) {
					$pc = 162
					continue
				}
				$g[65]=1
				start()
				$call(62, $g[72], 11)
				continue
			case 153:
				$call(62, $g[72], 2)
				continue
			case 154:
				$call(62, $g[72], 14)
				continue
			case 155:
				$call(62, $g[72], 1)
				continue
			case 156:
				$call(62, $g[72], 7)
				continue
			case 157:
				$call(62, $g[72], 15)
				continue
			case 158:
				$call(62, $g[72], 5)
				continue
			case 159:
				$call(62, $g[72], 8)
				continue
			case 160:
				$call(62, $g[72], 4)
				continue
			case 161:
				$g[65]=0
				$pc = 162
			case 162:
				$return(4)
				continue
			case 163:
				$enter(0);	// $eh10
				if (!($stack[$fp-3]&&($stack[$fp-4]&MB_LEFT))) {
					$pc = 164
					continue
				}
				reset()
				return
			case 164:
				$return(4)
				continue
			case 165:
				$enter(0);	// $eh11
				if (!($stack[$fp-3]&&($stack[$fp-4]&MB_LEFT))) {
					$pc = 167
					continue
				}
				$g[45]=$g[45] ? 0 : 1
				$g[61].setTxt("mode %d", $g[45])
				startInterrupt()
				$call(11, $g[72], 0, 1)
				continue
			case 166:
				endInterrupt()
				$pc = 167
			case 167:
				$return(4)
				continue
			}
		}
	}

	this.$getCurrentThread = $getCurrentThread
	this.$execute = $execute
	this.$resumeThread = $resumeThread
	this.$suspendThread = $suspendThread
	this.$switchToThread = $switchToThread

}

// eof
